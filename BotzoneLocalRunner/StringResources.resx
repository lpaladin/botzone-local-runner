<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BAD_LOCALAI_URL" xml:space="preserve">
    <value>Botzone本地AI的URL无效</value>
  </data>
  <data name="BOTZONEBOT_PLACEHOLDER" xml:space="preserve">
    <value>&lt;请在这里输入Bot的ID&gt;</value>
  </data>
  <data name="BOTZONE_LOCALAI_URL_PROMPT" xml:space="preserve">
    <value>&lt;在此粘贴Botzone本地AI的URL（点击Botzone头像菜单查看）&gt;</value>
  </data>
  <data name="BOTZONE_LOCALAI_URL_REGEX" xml:space="preserve">
    <value>(https?://.*botzone\.(org|org\.cn))/api/([0-9a-f]+)/([^/]+)</value>
  </data>
  <data name="BOTZONE_MATCH" xml:space="preserve">
    <value>这是一场 Botzone 评测的对局</value>
  </data>
  <data name="BOTZONE_MATCH_NO_HUMAN" xml:space="preserve">
    <value>人类玩家只能和本地AI对战（否则请直接在Botzone网站上进行人机对局）</value>
  </data>
  <data name="BOTZONE_MATCH_ONE_LOCALAI" xml:space="preserve">
    <value>与 Botzone 上的AI对战时必须且只能有一个本地AI</value>
  </data>
  <data name="CHOOSE_GAME_FIRST" xml:space="preserve">
    <value>请选择游戏</value>
  </data>
  <data name="ID_EMPTY" xml:space="preserve">
    <value>玩家ID不可为空</value>
  </data>
  <data name="LOCALAI_PATH_EMPTY" xml:space="preserve">
    <value>本地AI路径不可为空</value>
  </data>
  <data name="LOCALAI_PLACEHOLDER" xml:space="preserve">
    <value>&lt;请使用选择按钮选择程序&gt;</value>
  </data>
  <data name="LOCALHUMAN_PLACEHOLDER" xml:space="preserve">
    <value>&lt;开启对局后在右侧展示画面操作&gt;</value>
  </data>
  <data name="LOCAL_MATCH" xml:space="preserve">
    <value>这是一场本地运行的对局</value>
  </data>
  <data name="OFD_FILTER" xml:space="preserve">
    <value>所有程序 (*.exe;*.py;*.js;Main.class)|*.exe;*.py;*.js;*.class|Python 代码 (*.py)|*.py|Node.js 代码 (*.js)|*.js|Java 主类文件 |Main.class</value>
  </data>
  <data name="OFD_TITLE" xml:space="preserve">
    <value>选择要运行的本地AI程序</value>
  </data>
  <data name="TOO_MANY_HUMAN" xml:space="preserve">
    <value>人类玩家最多只能有一个</value>
  </data>
  <data name="CONSOLE_WELCOME" xml:space="preserve">
    <value>欢迎使用 Botzone 本地调试工具。</value>
  </data>
  <data name="CONSOLE_WELCOME2" xml:space="preserve">
    <value>如果不需要图形界面，请添加命令行参数启动。</value>
  </data>
  <data name="CONSOLE_WELCOME3" xml:space="preserve">
    <value>-h 参数可以查看命令行参数使用方法。</value>
  </data>
  <data name="CONSOLE_LOAD_GUI" xml:space="preserve">
    <value>正在加载图形界面……</value>
  </data>
  <data name="MATCHES_FILTER" xml:space="preserve">
    <value>对局组文件 (*.matches)|*.matches</value>
  </data>
  <data name="MATCHES_OFD_TITLE" xml:space="preserve">
    <value>载入对局组</value>
  </data>
  <data name="MATCHES_SFD_TITLE" xml:space="preserve">
    <value>保存对局组</value>
  </data>
  <data name="MATCH_RUNNING_NO_REPLAY" xml:space="preserve">
    <value>对局正在进行，无法回放过往对局。</value>
  </data>
  <data name="MESSAGE" xml:space="preserve">
    <value>提示</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="CONSOLE_HELP" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\CONSOLE_HELP.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;gb2312</value>
  </data>
  <data name="BAD_MATCH_COLLECTION_FORMAT" xml:space="preserve">
    <value>对局组文件的格式有误，无法读取！</value>
  </data>
  <data name="CONSOLE_BAD_FORMAT" xml:space="preserve">
    <value>调用格式不对，需要指明游戏与各个玩家的路径或者ID，用空格分隔</value>
  </data>
  <data name="CONSOLE_BAD_ID" xml:space="preserve">
    <value>参数中的 "{0}" 既不是本地AI的程序路径，也不是Botzone上的ID</value>
  </data>
  <data name="CONSOLE_BAD_LOCALAI_URL" xml:space="preserve">
    <value>该对局必须提供Botzone本地AI的URL才能进行。请提供-u参数。</value>
  </data>
  <data name="CONSOLE_BOTZONEMATCH" xml:space="preserve">
    <value>将在Botzone上进行对局，并与本地AI进行交互</value>
  </data>
  <data name="CONSOLE_LOCALMATCH" xml:space="preserve">
    <value>将进行本地对局……</value>
  </data>
  <data name="CONSOLE_MISSING_ARGUMENT" xml:space="preserve">
    <value>{0} 选项的后面缺少参数</value>
  </data>
  <data name="MATCH_FAILED" xml:space="preserve">
    <value>对局失败：</value>
  </data>
  <data name="NO_PARALLEL_MATCHES" xml:space="preserve">
    <value>不应当有多个对局同时进行！</value>
  </data>
  <data name="TITLE" xml:space="preserve">
    <value>Botzone 本地调试工具</value>
  </data>
  <data name="ABORT_FAILED" xml:space="preserve">
    <value>中止对局时发生错误：</value>
  </data>
</root>